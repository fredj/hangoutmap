<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="Participant's location">
     <Require feature="rpc"/>
     <Require feature="views"/>
  </ModulePrefs>
  <Content type="html"><![CDATA[
  <!doctype html>
  <html>
    <head>
      <meta charset="utf-8">
      <link rel="stylesheet" href="https://rawgithub.com/openlayers/ol3/gh-pages/master/build/ol.css" type="text/css">
      <style>
        html, body, .map {
          margin: 0;
          padding: 0;
          width: 100%;
          height: 100%;
        }
        .marker {
          width: 32px;
          height: 32px;
          margin-left: -16px;
          margin-bottom: -16px;
        }
      </style>
    </head>
    <body>
      <div id="map" class="map"></div>
      <script src="//talkgadget.google.com/hangouts/_/api/hangout.js?v=1.4" ></script>
      <script src="https://rawgithub.com/openlayers/ol3/gh-pages/master/build/ol.js" ></script>
      <script>
      // Copyright (c) 2013 by frederic.junod@gmail.com
      // Licensed under the http://www.wtfpl.net/ license
      //
      // Suggested playlist:
      //   http://www.lastfm.fr/music/Reverse+Engineering/Highly+Complex+Machinery
      //   http://www.lastfm.fr/music/Portishead/Dummy
      //   http://www.lastfm.fr/music/Faithless/Outrospective
      //   http://www.lastfm.fr/music/Passion+Pit/Chunk+of+Change
      // Bug report / pull request to: https://github.com/fredj/hangoutmap

        function init() {
          gapi.hangout.onApiReady.add(function(event) {
            if (event.isApiReady) {
              main();
            }
          });
        };

        function main() {
          view = new ol.View2D({
            center: [0, 0],
            zoom: 2
          });
          map = new ol.Map({
            layers: [
              new ol.layer.TileLayer({
                source: new ol.source.Stamen({
                  layer: 'watercolor'
                })
              }),
              new ol.layer.TileLayer({
                source: new ol.source.Stamen({
                  layer: 'terrain-labels'
                })
              })
            ],
            target: 'map',
            view: view
          });

          markers = {};

          geolocation = new ol.Geolocation();
          geolocation.bindTo('projection', view);

          geolocation.on('changed', function() {
            gapi.hangout.data.setValue(gapi.hangout.getLocalParticipantId(),
              JSON.stringify({
                position: geolocation.getPosition(),
                accuracy: geolocation.getAccuracy()
              })
            );
          });

          gapi.hangout.data.onStateChanged.add(function(event) {
            var participants = gapi.hangout.data.getKeys();
            for (var i = 0; i < participants.length; i++) {
              var participant = gapi.hangout.getParticipantById(participants[i]);
              if (participant) {
                var location = JSON.parse(gapi.hangout.data.getValue(participant.id));
                if (location.position) {
                  if (markers[participant.id] === undefined) {
                    var img = document.createElement('img');
                    img.className = 'marker';
                    img.src = participant.person.image.url;
                    img.title = participant.person.displayName;
                    markers[participant.id] = new ol.Overlay({
                      map: map,
                      element: img
                    });
                  }
                  markers[participant.id].setPosition(location.position)
                }
              }
            }
          });

          // called whenever a participant stops running this app.
          gapi.hangout.onParticipantsDisabled.add(function(event) {
            // var participants = event.disabledParticipants;
            // for (var i = 0; i < participants.lenght; i++) {
            //   api.hangout.data.clearValue(participants[i].id);
            // }
            // FIXME: remove marker
          });

          geolocation.setTracking(true);
        };
        gadgets.util.registerOnLoadHandler(init);
      </script>
    </body>
  </html>
  ]]>
  </Content>
</Module>
